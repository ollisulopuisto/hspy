name: Convert Markdown files

on: [push]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Pandoc and LaTex
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
        sudo apt-get install -y texlive-latex-base texlive-latex-recommended texlive-fonts-recommended texlive-lang-european texlive-xetex texlive-luatex
        echo '\usepackage[utf8]{inputenc}' >> header.tex
        echo '\usepackage[T1]{fontenc}' >> header.tex
    - name: Convert
      run: |
        HEADER="HSPY:n ajantasaiset ohjeet"
        mkdir -p output/html output/pdf
        # take a snapshot of all files in the output directory
        find output -type f > old_files
        echo "<html><head><title>$HEADER</title></head><body><h1>$HEADER</h1><ul>" > output/index.html
        for file in source/*.md
        do
          base_file_name="${file%.*}"
          base_file_name="${base_file_name#*/}"
          DATE=$(date)
          pandoc -s -o "output/html/$base_file_name.html" -V date="$DATE" "$file"
          pandoc --pdf-engine=xelatex -V date="$DATE" -o "output/pdf/$base_file_name.pdf" "$file"
          echo "<li><a href='html/$base_file_name.html'>$title</a> <a href='pdf/$base_file_name.pdf'>(pdf)</a></li>" >> output/index.html
        done
        echo "</ul><footer></footer></body></html>" >> output/index.html
        # find any new files in the output directory
        find output -type f > new_files
        # find any files in old_files not in new_files and delete them
        files_to_remove=$(comm -23 <(sort old_files) <(sort new_files))
        if [ -n "$files_to_remove" ]; then
            echo "$files_to_remove" | xargs rm
        fi
    - name: Deploy to Github Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output
